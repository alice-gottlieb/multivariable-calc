Notebook[{Cell[
CellGroupData[{Cell[
BoxData[RowBox[{"2","+","2"}]],"Input",CellID->1,
CellLabel->"In[1]:= "],Cell[
BoxData["4",StandardForm],"Output",CellID->2,CellLabel->"Out[1]= "]},
Open]],Cell[
CellGroupData[{Cell[
BoxData[RowBox[{"%","+","5"}]],"Input",CellID->7,
CellLabel->"In[2]:= "],Cell[
BoxData["9",StandardForm],"Output",CellID->8,CellLabel->"Out[2]= "]},
Open]],Cell[
CellGroupData[{Cell[
BoxData[RowBox[{"graph"," ","sin",RowBox[{"(","xy",")"}]}]],
"Input",CellID->13,CellLabel->"In[3]:= "],Cell[
BoxData[RowBox[{"graph"," ","sin"," ","xy"}],
StandardForm],"Output",CellID->14,CellLabel->"Out[3]= "]},Open]],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"graph"," ","of"," ","sin",RowBox[{"(","xy",")"}]}]],"Input",
CellID->19,CellLabel->"In[4]:= "],Cell[
BoxData[RowBox[{"graph"," ","of"," ","sin"," ","xy"}],
StandardForm],"Output",CellID->20,CellLabel->"Out[4]= "]},Open]],Cell[
CellGroupData[
{Cell[
"\<graph*of*sin*xy\>","WolframAlphaLong",CellLabel->"In[5]:= "],Cell[
BoxData[
NamespaceBox["WolframAlphaQueryResults",DynamicModuleBox[{Set[Typeset`q$$,"\"graph*of*sin*xy\""],Set[
Typeset`opts$$,{AppearanceElements->{"Warnings","Assumptions","Brand","Pods","PodMenus","Unsuccessful","Sources"}}],Set[
Typeset`elements$$,{"Warnings","Assumptions","Brand","Pods","PodMenus","Unsuccessful","Sources"}],Set[
Typeset`pod1$$,XMLElement["pod",{"title"->"Input interpretation","scanner"->"Identity","id"->"Input","position"->"100","error"->"false","numsubpods"->"1"},
{XMLElement["subpod",{"title"->""},{XMLElement["cell",{"compressed"->False,"string"->True},
{Cell[
BoxData[FormBox[TagBox[TagBox[GridBox[{{PaneBox[StyleBox[TagBox[GridBox[{{StyleBox[
"\"plot\"",{LineIndent->0,LineSpacing->{0.9,0,1.5}}],RowBox[{"sin","(","x",")"}]}},
GridBoxBackground->{"Columns"->{GrayLevel[0.949],None},"Rows"->{{None}}},GridBoxItemSize->{"Columns"->{{Automatic}},"Rows"->{{Automatic}}},
ColumnsEqual->False,RowsEqual->False,GridBoxDividers->{"Columns"->{GrayLevel[0.84],GrayLevel[
0.84],GrayLevel[0.84]},"Rows"->{{GrayLevel[0.84]}},"RowsIndexed"->{1->GrayLevel[0.84],-1->GrayLevel[
0.84]}},GridBoxSpacings->{"Columns"->{2,2,2},"Rows"->{{1}}},GridBoxAlignment->{"Columns"->{{Left}},"Rows"->{{Baseline}}},
AllowScriptLevelChange->False,BaselinePosition->1],TagBoxWrapper["Separator"->" | "]],
LineSpacing->{1,0,1.5},LineIndent->0],BaselinePosition->Center]}},GridBoxItemSize->{"Columns"->{{Automatic}},"Rows"->{{Automatic}}},
ColumnsEqual->False,RowsEqual->False,GridBoxSpacings->{"Columns"->{{AbsoluteThickness[
-1]}},"Rows"->{{0}}},AllowScriptLevelChange->False],TagBoxWrapper["Separator"->" | "]],
Function[PolynomialForm[Slot[1],TraditionalOrder->False]]],TraditionalForm]],"Output",
{Background->None,GraphicsBoxOptions->{DefaultBaseStyle->{FontFamily->"Times","Graphics",GraphicsBoxOptionsDefaultAxesStyle->Directive[
GrayLevel[0,0.35],FontColor->GrayLevel[0.25],FontOpacity->1,"GraphicsAxes"],GraphicsBoxOptionsDefaultTicksStyle->Directive[
FontFamily->"Times",FontSize->10,"GraphicsTicks"],GraphicsBoxOptionsDefaultFrameStyle->Directive[
GrayLevel[0,0.35],FontColor->GrayLevel[0.25],FontOpacity->1,"GraphicsFrame"],GraphicsBoxOptionsDefaultFrameTicksStyle->Directive[
FontFamily->"Times",FontSize->10,"GraphicsFrameTicks"]}},Graphics3DBoxOptions->{DefaultBaseStyle->{FontFamily->"Times","Graphics3D"}}},
CellSize->{550,Automatic}]}],XMLElement["dataformats",{},{"plaintext"}]}]}]],Set[
Typeset`pod2$$,XMLElement["pod",{"title"->"Plots","scanner"->"Plot","id"->"Plot","position"->"200","error"->"false","numsubpods"->"2"},
{XMLElement["subpod",{"title"->""},{XMLElement["minput",{},{"Plot[Sin[x], {x, -6.6, 6.6}]"}],XMLElement[
"cell",{"compressed"->True,"string"->False},{Cell[
BoxData[FormBox[TagBox[FormBox[
StyleBox[DynamicModuleBox[{Set[CalculateUtilities`GraphicsUtilities`Private`max3250$$,
0.5],Set[CalculateUtilities`GraphicsUtilities`Private`min3249$$,-0.5],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[Typeset`show$$,True],Set[Typeset`bookmarkList$$,{}],Set[Typeset`bookmarkMode$$,
"Menu"],Typeset`animator$$,Set[Typeset`animvar$$,1],Set[Typeset`name$$,"\"untitled\""],Set[
Typeset`specs$$,{{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$],{False,True}},{{Hold[
CalculateUtilities`GraphicsUtilities`Private`min3249$$],-0.5,"min"},-1,1},{{Hold[
CalculateUtilities`GraphicsUtilities`Private`max3250$$],0.5,"max"},-1,1},{Hold[Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Grid[{{Manipulate`Place[1],Manipulate`Place[2]}}]}],ImageMargins->{{20,30},{10,10}}]},
{1,2},2,Alignment->{Left,Top}]]],Manipulate`Dump`ThisIsNotAControl}}],Set[Typeset`size$$,
Automatic],Set[Typeset`update$$,0],Set[Typeset`initDone$$,False],Set[Typeset`skipInitDone$$,
False],Set[CalculateUtilities`GraphicsUtilities`Private`more$1500815$$,False],Set[
CalculateUtilities`GraphicsUtilities`Private`min3249$1500820$$,0],Set[CalculateUtilities`GraphicsUtilities`Private`max3250$1500821$$,
0]},DynamicBox[Manipulate`ManipulateBoxes[2,TraditionalForm,RuleDelayed["Variables",
{Set[CalculateUtilities`GraphicsUtilities`Private`max3250$$,0.5],Set[CalculateUtilities`GraphicsUtilities`Private`min3249$$,
-0.5],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,False]}],RuleDelayed[
"ControllerVariables",{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$,CalculateUtilities`GraphicsUtilities`Private`more$1500815$$,
False],Hold[CalculateUtilities`GraphicsUtilities`Private`min3249$$,CalculateUtilities`GraphicsUtilities`Private`min3249$1500820$$,
0],Hold[CalculateUtilities`GraphicsUtilities`Private`max3250$$,CalculateUtilities`GraphicsUtilities`Private`max3250$1500821$$,
0]}],RuleDelayed["OtherVariables",{Typeset`show$$,Typeset`bookmarkList$$,Typeset`bookmarkMode$$,Typeset`animator$$,Typeset`animvar$$,Typeset`name$$,Typeset`specs$$,Typeset`size$$,Typeset`update$$,Typeset`initDone$$,Typeset`skipInitDone$$}],
RuleDelayed["Body",Quiet[Function[Null,CalculateUtilities`GraphicsUtilities`Private`post$1500546[
Plot[SlotSequence[1],AspectRatio->If[TrueQ[CalculateUtilities`GraphicsUtilities`Private`aspect],
Automatic,Times[1,Power[GoldenRatio,-1]]]]],HoldAll][Sin[x],{x,If[NumericQ[CalculateUtilities`GraphicsUtilities`Private`min3249$$],
Function[Piecewise[{{Plus[0.0,Times[7.052858015123397,Tan[Times[1.5040801783846716,
Slot[1]]]]],Less[Slot[1],0]}},Plus[0.0,Times[7.052858015123397,Tan[Times[1.5040801783846716,
Slot[1]]]]]]][CalculateUtilities`GraphicsUtilities`Private`min3249$$],-6.5973445725385655],If[
And[NumericQ[CalculateUtilities`GraphicsUtilities`Private`min3249$$],NumericQ[CalculateUtilities`GraphicsUtilities`Private`max3250$$]],
Function[Piecewise[{{Plus[0.0,Times[7.052858015123397,Tan[Times[1.5040801783846716,
Slot[1]]]]],Less[Slot[1],0]}},Plus[0.0,Times[7.052858015123397,Tan[Times[1.5040801783846716,
Slot[1]]]]]]][If[Equal[CalculateUtilities`GraphicsUtilities`Private`min3249$$,CalculateUtilities`GraphicsUtilities`Private`max3250$$],
Plus[CalculateUtilities`GraphicsUtilities`Private`min3249$$,0.013194689145077132],
CalculateUtilities`GraphicsUtilities`Private`max3250$$]],6.5973445725385655]},LabelStyle->{FontFamily->"Bitstream Charter"},
WorkingPrecision->MachinePrecision,Ticks->{{{Times[-2,Pi],Times[-2,Pi]},{Times[-1,
Pi],Times[-1,Pi]},{0,0},{Pi,Pi},{Times[2,Pi],Times[2,Pi]}},Automatic},PlotRange->Automatic,
LabelStyle->{},Ticks->Automatic,ImageSize->{300.0},AxesLabel->{RawBoxes[FormBox["x",
TraditionalForm]],RawBoxes[FormBox["y",TraditionalForm]]},AxesLabel->{RawBoxes[FormBox[
"x",TraditionalForm]],None}]]],RuleDelayed["Specifications",{{CalculateUtilities`GraphicsUtilities`Private`more$$,{False,True},ControlType->None},{{CalculateUtilities`GraphicsUtilities`Private`min3249$$,-0.5,"min"},-1,1,ImageSize->Tiny,ControlPlacement->1},{{CalculateUtilities`GraphicsUtilities`Private`max3250$$,0.5,"max"},-1,1,ImageSize->Tiny,ControlPlacement->2},Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Grid[{{Manipulate`Place[1],Manipulate`Place[2]}}]}],ImageMargins->{{20,30},{10,10}}]},
{1,2},2,Alignment->{Left,Top}]]}],RuleDelayed["Options",{TrackedSymbols->True,ControlPlacement->Bottom,FrameMargins->{{0,0},{0,10}},Paneled->False,AppearanceElements->{},LabelStyle->{"DialogStyle",FontColor->GrayLevel[
0.25]}}],RuleDelayed["DefaultOptions",{}]],SingleEvaluation->True],RuleDelayed[Initialization,
CompoundExpression[{ReleaseHold[Hold[CompoundExpression[SetDelayed[CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,Blank[]]],Module[{CalculateUtilities`GraphicsUtilities`Private`res,CalculateUtilities`GraphicsUtilities`Private`unitformat},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`res,ReplaceAll[
ReplaceAll[Part[DeleteCases[Replace[ReplaceAll[CalculateUtilities`GraphicsUtilities`Private`ticks,
Alternatives[Style,UnitNumberForm,NumberForm]->Function[Slot[1]]],RuleDelayed[Pattern[
CalculateUtilities`GraphicsUtilities`Private`t,{PatternTest[BlankSequence[],NumberQ]}],
Thread[{CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`t}]]],
{Blank[],"",BlankNullSequence[]}],All,Span[1,2]],RuleDelayed[Superscript[Pattern[
CalculateUtilities`GraphicsUtilities`Private`b,Blank[Integer]],Pattern[CalculateUtilities`GraphicsUtilities`Private`p,
Blank[Integer]]],Power[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`p]]],
RuleDelayed[Row[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,BlankSequence[]]},
"\[Times]"],Times[CalculateUtilities`GraphicsUtilities`Private`a]]]],If[MatchQ[Part[
CalculateUtilities`GraphicsUtilities`Private`res,All,2],Condition[Pattern[CalculateUtilities`GraphicsUtilities`Private`quants,
{Alternatives[BlankSequence[ShortQuantity],BlankSequence[Quantity]]}],Equal[Length[
Union[Map[UnitObjectPart,CalculateUtilities`GraphicsUtilities`Private`quants]]],1]]],
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`unitformat,ToCDFQuantityFunction[
Part[CalculateUtilities`GraphicsUtilities`Private`res,1,2]]],CalculateUtilities`GraphicsUtilities`Private`unitformat->Thread[
{Part[CalculateUtilities`GraphicsUtilities`Private`res,All,1],QuantityPart[Part[CalculateUtilities`GraphicsUtilities`Private`res,
All,2],UnitObjectPart[Part[CalculateUtilities`GraphicsUtilities`Private`res,1,2]]]}]],
CalculateUtilities`GraphicsUtilities`Private`res]]]],Set[Options[CalculateUtilities`GraphicsUtilities`Private`post$1500546],
{"ReturnInteractiveTypes"->False,"Nearest"->Automatic}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`post$1500546[
Pattern[CalculateUtilities`GraphicsUtilities`Private`g,Blank[Graphics]],OptionsPattern[]],
Check[Module[{CalculateUtilities`GraphicsUtilities`Private`lines,CalculateUtilities`GraphicsUtilities`Private`pts,CalculateUtilities`GraphicsUtilities`Private`gg,CalculateUtilities`GraphicsUtilities`Private`type,CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r,CalculateUtilities`GraphicsUtilities`Private`oldepilog,CalculateUtilities`GraphicsUtilities`Private`range,CalculateUtilities`GraphicsUtilities`Private`gridlines,CalculateUtilities`GraphicsUtilities`Private`oldgridlines,Set[
CalculateUtilities`GraphicsUtilities`Private`neareststyle,OptionValue["Nearest"]]},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`oldepilog,Replace[
ReplaceAll[Epilog,Options[CalculateUtilities`GraphicsUtilities`Private`g]],Epilog->Sequence[]]],
Switch[ReplaceAll[{Frame,Axes},Options[CalculateUtilities`GraphicsUtilities`Private`g]],
{True,Blank[]},CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`type,
Frame],Set[{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r},
CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,ReplaceAll[
FrameTicks,Options[CalculateUtilities`GraphicsUtilities`Private`g]]]]],{Blank[],True},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`type,Axes],Set[
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l},
CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Axes,ReplaceAll[
Ticks,Options[CalculateUtilities`GraphicsUtilities`Private`g]]]]],Blank[],Set[CalculateUtilities`GraphicsUtilities`Private`type,
None]],If[And[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,Frame],Or[Not[
Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`t,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,
CalculateUtilities`GraphicsUtilities`Private`t]]],Not[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`r,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`r]]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`type,None]],If[TrueQ[OptionValue[
"ReturnInteractiveTypes"]],Which[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,
None]],{},FreeQ[CalculateUtilities`GraphicsUtilities`Private`g,Alternatives[Line,
Point]],{},True,{"Tooltips","Coordinates"}],CompoundExpression[If[FreeQ[CalculateUtilities`GraphicsUtilities`Private`g,
Alternatives[Line,Point]],Return[CalculateUtilities`GraphicsUtilities`Private`g]],
Set[CalculateUtilities`GraphicsUtilities`Private`gg,Normal[CalculateUtilities`GraphicsUtilities`Private`g]],
Set[CalculateUtilities`GraphicsUtilities`Private`pts,Partition[Flatten[Cases[Part[
CalculateUtilities`GraphicsUtilities`Private`gg,1],RuleDelayed[Point[Pattern[CalculateUtilities`GraphicsUtilities`Private`a,
Blank[]]],CalculateUtilities`GraphicsUtilities`Private`a],Infinity]],2]],If[Less[
Length[CalculateUtilities`GraphicsUtilities`Private`pts],2],CompoundExpression[Set[
CalculateUtilities`GraphicsUtilities`Private`lines,Cases[Part[CalculateUtilities`GraphicsUtilities`Private`gg,
1],Blank[Line],Infinity]],If[SameQ[CalculateUtilities`GraphicsUtilities`Private`lines,
{}],Return[CalculateUtilities`GraphicsUtilities`Private`g]],Set[CalculateUtilities`GraphicsUtilities`Private`pts,
Flatten[Cases[CalculateUtilities`GraphicsUtilities`Private`lines,RuleDelayed[Line[
Pattern[CalculateUtilities`GraphicsUtilities`Private`a,Blank[]]],CalculateUtilities`GraphicsUtilities`Private`a],
Infinity],1]],If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
Automatic],CompoundExpression[If[CalculateUtilities`GraphicsUtilities`Private`orderedLines[
CalculateUtilities`GraphicsUtilities`Private`lines],Set[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
"1D"],Set[CalculateUtilities`GraphicsUtilities`Private`neareststyle,"2D"]],Null]]],
If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,Automatic],Set[
CalculateUtilities`GraphicsUtilities`Private`neareststyle,"2D"]]],Set[CalculateUtilities`GraphicsUtilities`Private`range,
Replace[ReplaceAll[PlotRange,Options[CalculateUtilities`GraphicsUtilities`Private`g]],
RuleDelayed[Except[{{PatternTest[Blank[],NumberQ],PatternTest[Blank[],NumberQ]},{PatternTest[
Blank[],NumberQ],PatternTest[Blank[],NumberQ]}}],{Through[{Min,Max}[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,1]]],Through[{Min,Max}[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,2]]]}]]],Set[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
CalculateUtilities`GraphicsUtilities`Private`b,First[CalculateUtilities`GraphicsUtilities`Private`range],
Part[CalculateUtilities`GraphicsUtilities`Private`pts,All,1]]],Set[CalculateUtilities`GraphicsUtilities`Private`l,
CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l,
Last[CalculateUtilities`GraphicsUtilities`Private`range],Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,2]]],Set[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,ReplaceAll[
GridLines,Options[CalculateUtilities`GraphicsUtilities`Private`g]]],Set[CalculateUtilities`GraphicsUtilities`Private`gridlines,
With[{Set[CalculateUtilities`GraphicsUtilities`Private`gray,GrayLevel[0.7]]},Replace[
CalculateUtilities`GraphicsUtilities`Private`oldgridlines,{RuleDelayed[Pattern[CalculateUtilities`GraphicsUtilities`Private`a,
{Blank[List],Blank[List]}],Dynamic[Join[CalculateUtilities`GraphicsUtilities`Private`a,
Replace[MousePosition[{"Graphics",Graphics},None],{None->{{},{}},RuleDelayed[{Pattern[
CalculateUtilities`GraphicsUtilities`Private`x,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`y,
Blank[]]},{{{CalculateUtilities`GraphicsUtilities`Private`x,CalculateUtilities`GraphicsUtilities`Private`gray}},{{CalculateUtilities`GraphicsUtilities`Private`y,CalculateUtilities`GraphicsUtilities`Private`gray}}}]}],
2]]],RuleDelayed[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,Blank[List]],Automatic},
With[{Set[CalculateUtilities`GraphicsUtilities`Private`divisions,{CalculateUtilities`GraphicsUtilities`Private`a,FindDivisions[
Last[CalculateUtilities`GraphicsUtilities`Private`range],7]}]},Dynamic[Join[CalculateUtilities`GraphicsUtilities`Private`divisions,
Replace[MousePosition[{"Graphics",Graphics},None],{None->{{},{}},RuleDelayed[{Pattern[
CalculateUtilities`GraphicsUtilities`Private`x,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`y,
Blank[]]},{{{CalculateUtilities`GraphicsUtilities`Private`x,CalculateUtilities`GraphicsUtilities`Private`gray}},{{CalculateUtilities`GraphicsUtilities`Private`y,CalculateUtilities`GraphicsUtilities`Private`gray}}}]}],
2]]]],Blank[]->Dynamic[Map[Function[{{Slot[1],CalculateUtilities`GraphicsUtilities`Private`gray}}],
MousePosition[{"Graphics",Graphics},None]]]}]]],If[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,
None]],Show[CalculateUtilities`GraphicsUtilities`Private`g,GridLines->CalculateUtilities`GraphicsUtilities`Private`gridlines,
If[MatchQ[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,Alternatives[
None,GridLines]],Method->{"GridLinesInFront"->True},Apply[Sequence,{}]]],With[{Set[
CalculateUtilities`GraphicsUtilities`Private`nf,If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
"1D"],With[{Set[CalculateUtilities`GraphicsUtilities`Private`n,Nearest[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,1]->CalculateUtilities`GraphicsUtilities`Private`pts]]},Function[CalculateUtilities`GraphicsUtilities`Private`n[
Part[Slot[1],1]]]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`n,Nearest[
Transpose[Times[Transpose[CalculateUtilities`GraphicsUtilities`Private`pts],Power[
Abs[Apply[Subtract,CalculateUtilities`GraphicsUtilities`Private`range,{1}]],-1]]]->CalculateUtilities`GraphicsUtilities`Private`pts]],Set[
CalculateUtilities`GraphicsUtilities`Private`scale,Abs[Apply[Subtract,CalculateUtilities`GraphicsUtilities`Private`range,
{1}]]]},Function[CalculateUtilities`GraphicsUtilities`Private`n[Times[Slot[1],Power[
CalculateUtilities`GraphicsUtilities`Private`scale,-1]]]]]]],Set[CalculateUtilities`GraphicsUtilities`Private`left,
CalculateUtilities`GraphicsUtilities`Private`l],Set[CalculateUtilities`GraphicsUtilities`Private`bottom,
CalculateUtilities`GraphicsUtilities`Private`b]},Show[CalculateUtilities`GraphicsUtilities`Private`g,
GridLines->CalculateUtilities`GraphicsUtilities`Private`gridlines,If[MatchQ[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
Alternatives[None,GridLines]],Method->{"GridLinesInFront"->True},Apply[Sequence,{}]],
Epilog->{CalculateUtilities`GraphicsUtilities`Private`oldepilog,Dynamic[DynamicModule[
{Set[CalculateUtilities`GraphicsUtilities`Private`pt,CalculateUtilities`GraphicsUtilities`Private`nf[
MousePosition[{"Graphics",Graphics},{0,0}]]],Set[CalculateUtilities`GraphicsUtilities`Private`scaled,
MousePosition[{"GraphicsScaled",Graphics},None]]},If[SameQ[CalculateUtilities`GraphicsUtilities`Private`scaled,
None],{},{Text[Style[Row[{CalculateUtilities`GraphicsUtilities`Private`bottom[Part[
CalculateUtilities`GraphicsUtilities`Private`pt,1,1]],CalculateUtilities`GraphicsUtilities`Private`left[
Part[CalculateUtilities`GraphicsUtilities`Private`pt,1,2]]},","],12],Part[CalculateUtilities`GraphicsUtilities`Private`pt,
1],{Times[1.5,Sign[Plus[Part[CalculateUtilities`GraphicsUtilities`Private`scaled,
1],-0.5]]],0},Background->White],AbsolutePointSize[7],Point[CalculateUtilities`GraphicsUtilities`Private`pt],White,AbsolutePointSize[
5],Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]]],CalculateUtilities`GraphicsUtilities`Private`g]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`post$1500546[Pattern[CalculateUtilities`GraphicsUtilities`Private`g,
Blank[]],BlankNullSequence[]],CalculateUtilities`GraphicsUtilities`Private`g],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`orderedLines[{Pattern[CalculateUtilities`GraphicsUtilities`Private`l,
BlankSequence[Line]]}],Module[{CalculateUtilities`GraphicsUtilities`Private`ordered,CalculateUtilities`GraphicsUtilities`Private`intervals},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`ordered,Apply[
And,Map[Function[OrderedQ[Part[Slot[1],1,All,1]]],Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]],
If[Not[TrueQ[CalculateUtilities`GraphicsUtilities`Private`ordered]],Return[False]],
Set[CalculateUtilities`GraphicsUtilities`Private`intervals,Part[{CalculateUtilities`GraphicsUtilities`Private`l},
All,1,{1,-1},1]],SameQ[Length[Apply[Interval,CalculateUtilities`GraphicsUtilities`Private`intervals]],
Length[CalculateUtilities`GraphicsUtilities`Private`intervals]]]]],Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Frame,Alternatives[Automatic,FrameTicks]],{Identity,Identity,Identity,Identity}],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,
{Pattern[CalculateUtilities`GraphicsUtilities`Private`b,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`l,
Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`t,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`r,Blank[]]}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r}]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,
{{Pattern[CalculateUtilities`GraphicsUtilities`Private`l,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`r,
Blank[]]},{Pattern[CalculateUtilities`GraphicsUtilities`Private`b,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`t,Blank[]]}}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r}]],
Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,Blank[]],
{None,None,None,None}],Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Axes,Alternatives[Automatic,Ticks]],{Identity,Identity}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Axes,{Pattern[CalculateUtilities`GraphicsUtilities`Private`h,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`v,
Blank[]]}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,{CalculateUtilities`GraphicsUtilities`Private`h,CalculateUtilities`GraphicsUtilities`Private`v}]],
Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Axes,Blank[]],
{None,None}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,Blank[]]],ReplaceAll[ReplaceAll[
Part[DeleteCases[ReplaceAll[CalculateUtilities`GraphicsUtilities`Private`ticks,Alternatives[
Style,NumberForm]->Function[Slot[1]]],{Blank[],"",BlankNullSequence[]}],All,Span[
1,2]],RuleDelayed[Superscript[Pattern[CalculateUtilities`GraphicsUtilities`Private`b,
Blank[Integer]],Pattern[CalculateUtilities`GraphicsUtilities`Private`p,Blank[Integer]]],
Power[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`p]]],
RuleDelayed[Row[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,BlankSequence[]]},
"\[Times]"],Times[CalculateUtilities`GraphicsUtilities`Private`a]]]],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks$,Blank[]]],CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[CalculateUtilities`GraphicsUtilities`Private`ticks$]]],
Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[None],None],Set[
CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[False],None],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[
True],None],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[Automatic],
Identity],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[All],Identity],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[
CalculateUtilities`GraphicsUtilities`Private`func,Blank[]]->Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
Blank[]]],Replace[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks],
RuleDelayed[Pattern[CalculateUtilities`GraphicsUtilities`Private`f,Except[None]],
Composition[CalculateUtilities`GraphicsUtilities`Private`func,CalculateUtilities`GraphicsUtilities`Private`f]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[{}],None],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
{Repeated[{Blank[Integer],Blank[String]}]}]],Which[Quiet[MatchQ[Apply[SameQ,Map[Function[
Part[DateList[Slot[1]],Span[2,All]]],CalculateUtilities`GraphicsUtilities`Private`ticks,
{2}],{1}],{Repeated[True]}]],DateString,Apply[And,StringMatchQ[Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
All,2],NumberString]],CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
Transpose[{Part[CalculateUtilities`GraphicsUtilities`Private`ticks,All,1],ToExpression[
Part[CalculateUtilities`GraphicsUtilities`Private`ticks,All,2]]}]],True,None]],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
{Repeated[{PatternTest[Blank[],NumericQ],PatternTest[Blank[],NumericQ]}]}]],Which[
MatchQ[Apply[Equal,CalculateUtilities`GraphicsUtilities`Private`ticks,{1}],{Repeated[
True]}],Identity,MatchQ[Apply[Function[Equal[Slot[1],Log[Slot[2]]]],CalculateUtilities`GraphicsUtilities`Private`ticks,
{1}],{Repeated[True]}],Exp,TrueQ[Quiet[Apply[Equal,Apply[Divide,Plus[Transpose[Rest[
CalculateUtilities`GraphicsUtilities`Private`ticks]],Times[-1,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1]]]]]]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`slope,Apply[Divide,
Apply[Subtract,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,{-1,1}]]]]},
Function[SetPrecision[Plus[Times[Plus[Slot[1],Times[-1,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1,1]]],Power[CalculateUtilities`GraphicsUtilities`Private`slope,-1]],Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1,2]],3]]],True,None]],Set[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
Blank[]],None],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Pattern[CalculateUtilities`GraphicsUtilities`Private`type,Blank[]],BlankNullSequence[]],
CalculateUtilities`GraphicsUtilities`Private`type],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Identity,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`max,Blank[]]},Blank[]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`nf,
CalculateUtilities`GraphicsUtilities`Private`numberForm],Set[CalculateUtilities`GraphicsUtilities`Private`acc,
Floor[Plus[Max[Ceiling[FullSimplify[Plus[Log[10,Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]],
Times[-1,Log[10,Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,Times[
-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[100,-1]]]]]]],3],Times[
-1,RealExponent[Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]]]]]]},
Function[CalculateUtilities`GraphicsUtilities`Private`nf[Slot[1],CalculateUtilities`GraphicsUtilities`Private`acc]]]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Exp,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`max,
Blank[]]},Blank[]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`prec,Max[
Ceiling[FullSimplify[Plus[Log[10,Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]],
Times[-1,Log[10,Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,Times[
-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[100,-1]]]]]]],3]]},Function[
Quiet[RawBoxes[ToBoxes[NumberForm[Exp[Slot[1]],CalculateUtilities`GraphicsUtilities`Private`prec]]]]]]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
DateString,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`max,Blank[]]},Pattern[CalculateUtilities`GraphicsUtilities`Private`pts,
Blank[]]],Module[{CalculateUtilities`GraphicsUtilities`Private`dates,CalculateUtilities`GraphicsUtilities`Private`spec},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`dates,Map[DateList,
CalculateUtilities`GraphicsUtilities`Private`pts]],Set[CalculateUtilities`GraphicsUtilities`Private`spec,
Switch[Map[Length,Map[Union,Transpose[CalculateUtilities`GraphicsUtilities`Private`dates]]],
{Blank[],1,1,BlankSequence[]},{"Year"},{Blank[],Blank[],1,BlankSequence[]},{"MonthNameShort"," ","Year"},
Blank[],{"DayShort"," ","MonthNameShort"," ","Year"}]],If[Greater[Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,
Times[-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[31536000,-1]],25],
Set[CalculateUtilities`GraphicsUtilities`Private`spec,{"Year"}]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`s,
CalculateUtilities`GraphicsUtilities`Private`spec]},Function[DateString[Slot[1],CalculateUtilities`GraphicsUtilities`Private`s]]]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`numberForm,Function[{CalculateUtilities`GraphicsUtilities`Private`a,CalculateUtilities`GraphicsUtilities`Private`acc},
Quiet[RawBoxes[ToBoxes[NumberForm[CalculateUtilities`GraphicsUtilities`Private`a,
Max[1,Ceiling[Plus[RealExponent[CalculateUtilities`GraphicsUtilities`Private`a],CalculateUtilities`GraphicsUtilities`Private`acc]]],
ExponentFunction->Function[Null],NumberFormat->Function[StringReplace[Slot[1],StringExpression[
Pattern[CalculateUtilities`GraphicsUtilities`Private`s,BlankSequence[]],".",EndOfString]->CalculateUtilities`GraphicsUtilities`Private`s]]]]]]]]]]],ReleaseHold[
Uncompress["1:eJztVm1v0zAQbikw3t/+ARKf0QZUfEJidGNMGlCS8r23xEksXDvYzjb48+Czm6RZu0oxHaAp/XCqL83ju+eeu97TYxEk/V6vp64b80GwONnC0xNjRmKWi4LH+2e5JEpRwZNr+OyOMSHRe4TBDxI7301j3gs5A+3Ob/B9YFHBQJOvmjKqKVHTAwl5RiNVe8aSnpifTJmIgNGf5NnOcHt7OHztYDCWMWhNJFcv20LmmQRFkh4C3TDmHQP+zR0fl8dPBWMh+V4QHhH10HgnEmIDIzgwzMf71qvN1D1MTAOPQcaXTpOV56jtBUpLytMJmeX4xsVk7bQFBpkqx839kpt1CnLh38IHIrQxOY9N2p4tgX5hXDH6zsvqn3M3wPPbtvBSnK4mDvPbZcgbaHpC1DKdz1vXyTFSda2Nfs7VZc2XjQZ58ZSp/5eOqNLLYbxoGwaZHZsar9beMvyrtvAix66fi/uBMZ+dowRcNRwqwX0UccHmUTRTHjiJtk9X5cbhMO5WfIfo9KlghROYOMt+sf3xqAKvN4UQazfdgHR4PQMCkhPjii23ezSlepSBhMgAz6/rl002EXUoHne2rz3lMTUDzBGybnlCc5gs1B10lH35o+JWcjnXZMj7IdckJXKt6G9jfaQhl8cT4RlJiBc09erNYZXUGKS37AclSJgDpwhJf5mP/eYeLlYCqTqQqC7pWBzY0pz5J9EvC3xEeKqz5o7tObq82xazCcRprbqAJsnitNkc0/0m040bmgPdlwTfkvgP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCTZi/Ff6DfyEuFY="]]},
Set[Typeset`initDone$$,True]]],RuleDelayed[DynamicModuleValues,{}],RuleDelayed[Deinitialization,
None],RuleDelayed[UntrackedVariables,{Typeset`size$$}],SynchronousInitialization->True,
RuleDelayed[UnsavedVariables,{Typeset`initDone$$}]],"Manipulate",Deployed->True,StripOnInput->False],
TraditionalForm],Manipulate`InterpretManipulate[1]],TraditionalForm]],"Output",{Background->None,GraphicsBoxOptions->{DefaultBaseStyle->{FontFamily->"Times","Graphics",GraphicsBoxOptionsDefaultAxesStyle->Directive[
GrayLevel[0,0.35],FontColor->GrayLevel[0.25],FontOpacity->1,"GraphicsAxes"],GraphicsBoxOptionsDefaultTicksStyle->Directive[
FontFamily->"Times",FontSize->10,"GraphicsTicks"],GraphicsBoxOptionsDefaultFrameStyle->Directive[
GrayLevel[0,0.35],FontColor->GrayLevel[0.25],FontOpacity->1,"GraphicsFrame"],GraphicsBoxOptionsDefaultFrameTicksStyle->Directive[
FontFamily->"Times",FontSize->10,"GraphicsFrameTicks"]}},Graphics3DBoxOptions->{DefaultBaseStyle->{FontFamily->"Times","Graphics3D"}}},
CellSize->{550,Automatic}]}],XMLElement["dataformats",{},{"minput"}]}],XMLElement[
"subpod",{"title"->""},{XMLElement["minput",{},{"Plot[Sin[x], {x, -26, 26}]"}],XMLElement[
"cell",{"compressed"->True,"string"->False},{Cell[
BoxData[FormBox[TagBox[FormBox[
StyleBox[DynamicModuleBox[{Set[CalculateUtilities`GraphicsUtilities`Private`max3252$$,
0.5],Set[CalculateUtilities`GraphicsUtilities`Private`min3251$$,-0.5],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[Typeset`show$$,True],Set[Typeset`bookmarkList$$,{}],Set[Typeset`bookmarkMode$$,
"Menu"],Typeset`animator$$,Set[Typeset`animvar$$,1],Set[Typeset`name$$,"\"untitled\""],Set[
Typeset`specs$$,{{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$],{False,True}},{{Hold[
CalculateUtilities`GraphicsUtilities`Private`min3251$$],-0.5,"min"},-1,1},{{Hold[
CalculateUtilities`GraphicsUtilities`Private`max3252$$],0.5,"max"},-1,1},{Hold[Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Grid[{{Manipulate`Place[1],Manipulate`Place[2]}}]}],ImageMargins->{{20,30},{10,10}}]},
{1,2},2,Alignment->{Left,Top}]]],Manipulate`Dump`ThisIsNotAControl}}],Set[Typeset`size$$,
Automatic],Set[Typeset`update$$,0],Set[Typeset`initDone$$,False],Set[Typeset`skipInitDone$$,
False],Set[CalculateUtilities`GraphicsUtilities`Private`more$1501149$$,False],Set[
CalculateUtilities`GraphicsUtilities`Private`min3251$1501150$$,0],Set[CalculateUtilities`GraphicsUtilities`Private`max3252$1501151$$,
0]},DynamicBox[Manipulate`ManipulateBoxes[2,TraditionalForm,RuleDelayed["Variables",
{Set[CalculateUtilities`GraphicsUtilities`Private`max3252$$,0.5],Set[CalculateUtilities`GraphicsUtilities`Private`min3251$$,
-0.5],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,False]}],RuleDelayed[
"ControllerVariables",{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$,CalculateUtilities`GraphicsUtilities`Private`more$1501149$$,
False],Hold[CalculateUtilities`GraphicsUtilities`Private`min3251$$,CalculateUtilities`GraphicsUtilities`Private`min3251$1501150$$,
0],Hold[CalculateUtilities`GraphicsUtilities`Private`max3252$$,CalculateUtilities`GraphicsUtilities`Private`max3252$1501151$$,
0]}],RuleDelayed["OtherVariables",{Typeset`show$$,Typeset`bookmarkList$$,Typeset`bookmarkMode$$,Typeset`animator$$,Typeset`animvar$$,Typeset`name$$,Typeset`specs$$,Typeset`size$$,Typeset`update$$,Typeset`initDone$$,Typeset`skipInitDone$$}],
RuleDelayed["Body",Quiet[Function[Null,CalculateUtilities`GraphicsUtilities`Private`post$1500880[
Plot[SlotSequence[1],AspectRatio->If[TrueQ[CalculateUtilities`GraphicsUtilities`Private`aspect],
Automatic,Times[1,Power[GoldenRatio,-1]]]]],HoldAll][Sin[x],{x,If[NumericQ[CalculateUtilities`GraphicsUtilities`Private`min3251$$],
Function[Piecewise[{{Plus[0.0,Times[28.21143206049359,Tan[Times[1.5040801783846716,
Slot[1]]]]],Less[Slot[1],0]}},Plus[0.0,Times[28.21143206049359,Tan[Times[1.5040801783846716,
Slot[1]]]]]]][CalculateUtilities`GraphicsUtilities`Private`min3251$$],-26.389378290154262],If[
And[NumericQ[CalculateUtilities`GraphicsUtilities`Private`min3251$$],NumericQ[CalculateUtilities`GraphicsUtilities`Private`max3252$$]],
Function[Piecewise[{{Plus[0.0,Times[28.21143206049359,Tan[Times[1.5040801783846716,
Slot[1]]]]],Less[Slot[1],0]}},Plus[0.0,Times[28.21143206049359,Tan[Times[1.5040801783846716,
Slot[1]]]]]]][If[Equal[CalculateUtilities`GraphicsUtilities`Private`min3251$$,CalculateUtilities`GraphicsUtilities`Private`max3252$$],
Plus[CalculateUtilities`GraphicsUtilities`Private`min3251$$,0.052778756580308527],
CalculateUtilities`GraphicsUtilities`Private`max3252$$]],26.389378290154262]},LabelStyle->{FontFamily->"Bitstream Charter"},
WorkingPrecision->MachinePrecision,PlotRange->Automatic,LabelStyle->{},Ticks->Automatic,
ImageSize->{300.0},AxesLabel->{RawBoxes[FormBox["x",TraditionalForm]],RawBoxes[FormBox[
"y",TraditionalForm]]},AxesLabel->{RawBoxes[FormBox["x",TraditionalForm]],None}]]],
RuleDelayed["Specifications",{{CalculateUtilities`GraphicsUtilities`Private`more$$,{False,True},ControlType->None},{{CalculateUtilities`GraphicsUtilities`Private`min3251$$,-0.5,"min"},-1,1,ImageSize->Tiny,ControlPlacement->1},{{CalculateUtilities`GraphicsUtilities`Private`max3252$$,0.5,"max"},-1,1,ImageSize->Tiny,ControlPlacement->2},Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Grid[{{Manipulate`Place[1],Manipulate`Place[2]}}]}],ImageMargins->{{20,30},{10,10}}]},
{1,2},2,Alignment->{Left,Top}]]}],RuleDelayed["Options",{TrackedSymbols->True,ControlPlacement->Bottom,FrameMargins->{{0,0},{0,10}},Paneled->False,AppearanceElements->{},LabelStyle->{"DialogStyle",FontColor->GrayLevel[
0.25]}}],RuleDelayed["DefaultOptions",{}]],SingleEvaluation->True],RuleDelayed[Initialization,
CompoundExpression[{ReleaseHold[Hold[CompoundExpression[SetDelayed[CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,Blank[]]],Module[{CalculateUtilities`GraphicsUtilities`Private`res,CalculateUtilities`GraphicsUtilities`Private`unitformat},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`res,ReplaceAll[
ReplaceAll[Part[DeleteCases[Replace[ReplaceAll[CalculateUtilities`GraphicsUtilities`Private`ticks,
Alternatives[Style,UnitNumberForm,NumberForm]->Function[Slot[1]]],RuleDelayed[Pattern[
CalculateUtilities`GraphicsUtilities`Private`t,{PatternTest[BlankSequence[],NumberQ]}],
Thread[{CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`t}]]],
{Blank[],"",BlankNullSequence[]}],All,Span[1,2]],RuleDelayed[Superscript[Pattern[
CalculateUtilities`GraphicsUtilities`Private`b,Blank[Integer]],Pattern[CalculateUtilities`GraphicsUtilities`Private`p,
Blank[Integer]]],Power[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`p]]],
RuleDelayed[Row[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,BlankSequence[]]},
"\[Times]"],Times[CalculateUtilities`GraphicsUtilities`Private`a]]]],If[MatchQ[Part[
CalculateUtilities`GraphicsUtilities`Private`res,All,2],Condition[Pattern[CalculateUtilities`GraphicsUtilities`Private`quants,
{Alternatives[BlankSequence[ShortQuantity],BlankSequence[Quantity]]}],Equal[Length[
Union[Map[UnitObjectPart,CalculateUtilities`GraphicsUtilities`Private`quants]]],1]]],
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`unitformat,ToCDFQuantityFunction[
Part[CalculateUtilities`GraphicsUtilities`Private`res,1,2]]],CalculateUtilities`GraphicsUtilities`Private`unitformat->Thread[
{Part[CalculateUtilities`GraphicsUtilities`Private`res,All,1],QuantityPart[Part[CalculateUtilities`GraphicsUtilities`Private`res,
All,2],UnitObjectPart[Part[CalculateUtilities`GraphicsUtilities`Private`res,1,2]]]}]],
CalculateUtilities`GraphicsUtilities`Private`res]]]],Set[Options[CalculateUtilities`GraphicsUtilities`Private`post$1500880],
{"ReturnInteractiveTypes"->False,"Nearest"->Automatic}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`post$1500880[
Pattern[CalculateUtilities`GraphicsUtilities`Private`g,Blank[Graphics]],OptionsPattern[]],
Check[Module[{CalculateUtilities`GraphicsUtilities`Private`lines,CalculateUtilities`GraphicsUtilities`Private`pts,CalculateUtilities`GraphicsUtilities`Private`gg,CalculateUtilities`GraphicsUtilities`Private`type,CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r,CalculateUtilities`GraphicsUtilities`Private`oldepilog,CalculateUtilities`GraphicsUtilities`Private`range,CalculateUtilities`GraphicsUtilities`Private`gridlines,CalculateUtilities`GraphicsUtilities`Private`oldgridlines,Set[
CalculateUtilities`GraphicsUtilities`Private`neareststyle,OptionValue["Nearest"]]},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`oldepilog,Replace[
ReplaceAll[Epilog,Options[CalculateUtilities`GraphicsUtilities`Private`g]],Epilog->Sequence[]]],
Switch[ReplaceAll[{Frame,Axes},Options[CalculateUtilities`GraphicsUtilities`Private`g]],
{True,Blank[]},CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`type,
Frame],Set[{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r},
CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,ReplaceAll[
FrameTicks,Options[CalculateUtilities`GraphicsUtilities`Private`g]]]]],{Blank[],True},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`type,Axes],Set[
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l},
CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Axes,ReplaceAll[
Ticks,Options[CalculateUtilities`GraphicsUtilities`Private`g]]]]],Blank[],Set[CalculateUtilities`GraphicsUtilities`Private`type,
None]],If[And[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,Frame],Or[Not[
Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`t,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,
CalculateUtilities`GraphicsUtilities`Private`t]]],Not[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`r,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`r]]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`type,None]],If[TrueQ[OptionValue[
"ReturnInteractiveTypes"]],Which[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,
None]],{},FreeQ[CalculateUtilities`GraphicsUtilities`Private`g,Alternatives[Line,
Point]],{},True,{"Tooltips","Coordinates"}],CompoundExpression[If[FreeQ[CalculateUtilities`GraphicsUtilities`Private`g,
Alternatives[Line,Point]],Return[CalculateUtilities`GraphicsUtilities`Private`g]],
Set[CalculateUtilities`GraphicsUtilities`Private`gg,Normal[CalculateUtilities`GraphicsUtilities`Private`g]],
Set[CalculateUtilities`GraphicsUtilities`Private`pts,Partition[Flatten[Cases[Part[
CalculateUtilities`GraphicsUtilities`Private`gg,1],RuleDelayed[Point[Pattern[CalculateUtilities`GraphicsUtilities`Private`a,
Blank[]]],CalculateUtilities`GraphicsUtilities`Private`a],Infinity]],2]],If[Less[
Length[CalculateUtilities`GraphicsUtilities`Private`pts],2],CompoundExpression[Set[
CalculateUtilities`GraphicsUtilities`Private`lines,Cases[Part[CalculateUtilities`GraphicsUtilities`Private`gg,
1],Blank[Line],Infinity]],If[SameQ[CalculateUtilities`GraphicsUtilities`Private`lines,
{}],Return[CalculateUtilities`GraphicsUtilities`Private`g]],Set[CalculateUtilities`GraphicsUtilities`Private`pts,
Flatten[Cases[CalculateUtilities`GraphicsUtilities`Private`lines,RuleDelayed[Line[
Pattern[CalculateUtilities`GraphicsUtilities`Private`a,Blank[]]],CalculateUtilities`GraphicsUtilities`Private`a],
Infinity],1]],If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
Automatic],CompoundExpression[If[CalculateUtilities`GraphicsUtilities`Private`orderedLines[
CalculateUtilities`GraphicsUtilities`Private`lines],Set[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
"1D"],Set[CalculateUtilities`GraphicsUtilities`Private`neareststyle,"2D"]],Null]]],
If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,Automatic],Set[
CalculateUtilities`GraphicsUtilities`Private`neareststyle,"2D"]]],Set[CalculateUtilities`GraphicsUtilities`Private`range,
Replace[ReplaceAll[PlotRange,Options[CalculateUtilities`GraphicsUtilities`Private`g]],
RuleDelayed[Except[{{PatternTest[Blank[],NumberQ],PatternTest[Blank[],NumberQ]},{PatternTest[
Blank[],NumberQ],PatternTest[Blank[],NumberQ]}}],{Through[{Min,Max}[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,1]]],Through[{Min,Max}[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,2]]]}]]],Set[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
CalculateUtilities`GraphicsUtilities`Private`b,First[CalculateUtilities`GraphicsUtilities`Private`range],
Part[CalculateUtilities`GraphicsUtilities`Private`pts,All,1]]],Set[CalculateUtilities`GraphicsUtilities`Private`l,
CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l,
Last[CalculateUtilities`GraphicsUtilities`Private`range],Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,2]]],Set[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,ReplaceAll[
GridLines,Options[CalculateUtilities`GraphicsUtilities`Private`g]]],Set[CalculateUtilities`GraphicsUtilities`Private`gridlines,
With[{Set[CalculateUtilities`GraphicsUtilities`Private`gray,GrayLevel[0.7]]},Replace[
CalculateUtilities`GraphicsUtilities`Private`oldgridlines,{RuleDelayed[Pattern[CalculateUtilities`GraphicsUtilities`Private`a,
{Blank[List],Blank[List]}],Dynamic[Join[CalculateUtilities`GraphicsUtilities`Private`a,
Replace[MousePosition[{"Graphics",Graphics},None],{None->{{},{}},RuleDelayed[{Pattern[
CalculateUtilities`GraphicsUtilities`Private`x,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`y,
Blank[]]},{{{CalculateUtilities`GraphicsUtilities`Private`x,CalculateUtilities`GraphicsUtilities`Private`gray}},{{CalculateUtilities`GraphicsUtilities`Private`y,CalculateUtilities`GraphicsUtilities`Private`gray}}}]}],
2]]],RuleDelayed[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,Blank[List]],Automatic},
With[{Set[CalculateUtilities`GraphicsUtilities`Private`divisions,{CalculateUtilities`GraphicsUtilities`Private`a,FindDivisions[
Last[CalculateUtilities`GraphicsUtilities`Private`range],7]}]},Dynamic[Join[CalculateUtilities`GraphicsUtilities`Private`divisions,
Replace[MousePosition[{"Graphics",Graphics},None],{None->{{},{}},RuleDelayed[{Pattern[
CalculateUtilities`GraphicsUtilities`Private`x,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`y,
Blank[]]},{{{CalculateUtilities`GraphicsUtilities`Private`x,CalculateUtilities`GraphicsUtilities`Private`gray}},{{CalculateUtilities`GraphicsUtilities`Private`y,CalculateUtilities`GraphicsUtilities`Private`gray}}}]}],
2]]]],Blank[]->Dynamic[Map[Function[{{Slot[1],CalculateUtilities`GraphicsUtilities`Private`gray}}],
MousePosition[{"Graphics",Graphics},None]]]}]]],If[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,
None]],Show[CalculateUtilities`GraphicsUtilities`Private`g,GridLines->CalculateUtilities`GraphicsUtilities`Private`gridlines,
If[MatchQ[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,Alternatives[
None,GridLines]],Method->{"GridLinesInFront"->True},Apply[Sequence,{}]]],With[{Set[
CalculateUtilities`GraphicsUtilities`Private`nf,If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
"1D"],With[{Set[CalculateUtilities`GraphicsUtilities`Private`n,Nearest[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,1]->CalculateUtilities`GraphicsUtilities`Private`pts]]},Function[CalculateUtilities`GraphicsUtilities`Private`n[
Part[Slot[1],1]]]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`n,Nearest[
Transpose[Times[Transpose[CalculateUtilities`GraphicsUtilities`Private`pts],Power[
Abs[Apply[Subtract,CalculateUtilities`GraphicsUtilities`Private`range,{1}]],-1]]]->CalculateUtilities`GraphicsUtilities`Private`pts]],Set[
CalculateUtilities`GraphicsUtilities`Private`scale,Abs[Apply[Subtract,CalculateUtilities`GraphicsUtilities`Private`range,
{1}]]]},Function[CalculateUtilities`GraphicsUtilities`Private`n[Times[Slot[1],Power[
CalculateUtilities`GraphicsUtilities`Private`scale,-1]]]]]]],Set[CalculateUtilities`GraphicsUtilities`Private`left,
CalculateUtilities`GraphicsUtilities`Private`l],Set[CalculateUtilities`GraphicsUtilities`Private`bottom,
CalculateUtilities`GraphicsUtilities`Private`b]},Show[CalculateUtilities`GraphicsUtilities`Private`g,
GridLines->CalculateUtilities`GraphicsUtilities`Private`gridlines,If[MatchQ[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
Alternatives[None,GridLines]],Method->{"GridLinesInFront"->True},Apply[Sequence,{}]],
Epilog->{CalculateUtilities`GraphicsUtilities`Private`oldepilog,Dynamic[DynamicModule[
{Set[CalculateUtilities`GraphicsUtilities`Private`pt,CalculateUtilities`GraphicsUtilities`Private`nf[
MousePosition[{"Graphics",Graphics},{0,0}]]],Set[CalculateUtilities`GraphicsUtilities`Private`scaled,
MousePosition[{"GraphicsScaled",Graphics},None]]},If[SameQ[CalculateUtilities`GraphicsUtilities`Private`scaled,
None],{},{Text[Style[Row[{CalculateUtilities`GraphicsUtilities`Private`bottom[Part[
CalculateUtilities`GraphicsUtilities`Private`pt,1,1]],CalculateUtilities`GraphicsUtilities`Private`left[
Part[CalculateUtilities`GraphicsUtilities`Private`pt,1,2]]},","],12],Part[CalculateUtilities`GraphicsUtilities`Private`pt,
1],{Times[1.5,Sign[Plus[Part[CalculateUtilities`GraphicsUtilities`Private`scaled,
1],-0.5]]],0},Background->White],AbsolutePointSize[7],Point[CalculateUtilities`GraphicsUtilities`Private`pt],White,AbsolutePointSize[
5],Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]]],CalculateUtilities`GraphicsUtilities`Private`g]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`post$1500880[Pattern[CalculateUtilities`GraphicsUtilities`Private`g,
Blank[]],BlankNullSequence[]],CalculateUtilities`GraphicsUtilities`Private`g],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`orderedLines[{Pattern[CalculateUtilities`GraphicsUtilities`Private`l,
BlankSequence[Line]]}],Module[{CalculateUtilities`GraphicsUtilities`Private`ordered,CalculateUtilities`GraphicsUtilities`Private`intervals},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`ordered,Apply[
And,Map[Function[OrderedQ[Part[Slot[1],1,All,1]]],Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]],
If[Not[TrueQ[CalculateUtilities`GraphicsUtilities`Private`ordered]],Return[False]],
Set[CalculateUtilities`GraphicsUtilities`Private`intervals,Part[{CalculateUtilities`GraphicsUtilities`Private`l},
All,1,{1,-1},1]],SameQ[Length[Apply[Interval,CalculateUtilities`GraphicsUtilities`Private`intervals]],
Length[CalculateUtilities`GraphicsUtilities`Private`intervals]]]]],Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Frame,Alternatives[Automatic,FrameTicks]],{Identity,Identity,Identity,Identity}],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,
{Pattern[CalculateUtilities`GraphicsUtilities`Private`b,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`l,
Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`t,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`r,Blank[]]}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r}]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,
{{Pattern[CalculateUtilities`GraphicsUtilities`Private`l,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`r,
Blank[]]},{Pattern[CalculateUtilities`GraphicsUtilities`Private`b,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`t,Blank[]]}}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r}]],
Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,Blank[]],
{None,None,None,None}],Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Axes,Alternatives[Automatic,Ticks]],{Identity,Identity}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Axes,{Pattern[CalculateUtilities`GraphicsUtilities`Private`h,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`v,
Blank[]]}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,{CalculateUtilities`GraphicsUtilities`Private`h,CalculateUtilities`GraphicsUtilities`Private`v}]],
Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Axes,Blank[]],
{None,None}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,Blank[]]],ReplaceAll[ReplaceAll[
Part[DeleteCases[ReplaceAll[CalculateUtilities`GraphicsUtilities`Private`ticks,Alternatives[
Style,NumberForm]->Function[Slot[1]]],{Blank[],"",BlankNullSequence[]}],All,Span[
1,2]],RuleDelayed[Superscript[Pattern[CalculateUtilities`GraphicsUtilities`Private`b,
Blank[Integer]],Pattern[CalculateUtilities`GraphicsUtilities`Private`p,Blank[Integer]]],
Power[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`p]]],
RuleDelayed[Row[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,BlankSequence[]]},
"\[Times]"],Times[CalculateUtilities`GraphicsUtilities`Private`a]]]],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks$,Blank[]]],CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[CalculateUtilities`GraphicsUtilities`Private`ticks$]]],
Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[None],None],Set[
CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[False],None],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[
True],None],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[Automatic],
Identity],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[All],Identity],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[
CalculateUtilities`GraphicsUtilities`Private`func,Blank[]]->Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
Blank[]]],Replace[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks],
RuleDelayed[Pattern[CalculateUtilities`GraphicsUtilities`Private`f,Except[None]],
Composition[CalculateUtilities`GraphicsUtilities`Private`func,CalculateUtilities`GraphicsUtilities`Private`f]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[{}],None],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
{Repeated[{Blank[Integer],Blank[String]}]}]],Which[Quiet[MatchQ[Apply[SameQ,Map[Function[
Part[DateList[Slot[1]],Span[2,All]]],CalculateUtilities`GraphicsUtilities`Private`ticks,
{2}],{1}],{Repeated[True]}]],DateString,Apply[And,StringMatchQ[Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
All,2],NumberString]],CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
Transpose[{Part[CalculateUtilities`GraphicsUtilities`Private`ticks,All,1],ToExpression[
Part[CalculateUtilities`GraphicsUtilities`Private`ticks,All,2]]}]],True,None]],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
{Repeated[{PatternTest[Blank[],NumericQ],PatternTest[Blank[],NumericQ]}]}]],Which[
MatchQ[Apply[Equal,CalculateUtilities`GraphicsUtilities`Private`ticks,{1}],{Repeated[
True]}],Identity,MatchQ[Apply[Function[Equal[Slot[1],Log[Slot[2]]]],CalculateUtilities`GraphicsUtilities`Private`ticks,
{1}],{Repeated[True]}],Exp,TrueQ[Quiet[Apply[Equal,Apply[Divide,Plus[Transpose[Rest[
CalculateUtilities`GraphicsUtilities`Private`ticks]],Times[-1,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1]]]]]]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`slope,Apply[Divide,
Apply[Subtract,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,{-1,1}]]]]},
Function[SetPrecision[Plus[Times[Plus[Slot[1],Times[-1,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1,1]]],Power[CalculateUtilities`GraphicsUtilities`Private`slope,-1]],Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1,2]],3]]],True,None]],Set[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
Blank[]],None],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Pattern[CalculateUtilities`GraphicsUtilities`Private`type,Blank[]],BlankNullSequence[]],
CalculateUtilities`GraphicsUtilities`Private`type],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Identity,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`max,Blank[]]},Blank[]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`nf,
CalculateUtilities`GraphicsUtilities`Private`numberForm],Set[CalculateUtilities`GraphicsUtilities`Private`acc,
Floor[Plus[Max[Ceiling[FullSimplify[Plus[Log[10,Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]],
Times[-1,Log[10,Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,Times[
-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[100,-1]]]]]]],3],Times[
-1,RealExponent[Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]]]]]]},
Function[CalculateUtilities`GraphicsUtilities`Private`nf[Slot[1],CalculateUtilities`GraphicsUtilities`Private`acc]]]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Exp,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`max,
Blank[]]},Blank[]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`prec,Max[
Ceiling[FullSimplify[Plus[Log[10,Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]],
Times[-1,Log[10,Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,Times[
-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[100,-1]]]]]]],3]]},Function[
Quiet[RawBoxes[ToBoxes[NumberForm[Exp[Slot[1]],CalculateUtilities`GraphicsUtilities`Private`prec]]]]]]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
DateString,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`max,Blank[]]},Pattern[CalculateUtilities`GraphicsUtilities`Private`pts,
Blank[]]],Module[{CalculateUtilities`GraphicsUtilities`Private`dates,CalculateUtilities`GraphicsUtilities`Private`spec},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`dates,Map[DateList,
CalculateUtilities`GraphicsUtilities`Private`pts]],Set[CalculateUtilities`GraphicsUtilities`Private`spec,
Switch[Map[Length,Map[Union,Transpose[CalculateUtilities`GraphicsUtilities`Private`dates]]],
{Blank[],1,1,BlankSequence[]},{"Year"},{Blank[],Blank[],1,BlankSequence[]},{"MonthNameShort"," ","Year"},
Blank[],{"DayShort"," ","MonthNameShort"," ","Year"}]],If[Greater[Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,
Times[-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[31536000,-1]],25],
Set[CalculateUtilities`GraphicsUtilities`Private`spec,{"Year"}]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`s,
CalculateUtilities`GraphicsUtilities`Private`spec]},Function[DateString[Slot[1],CalculateUtilities`GraphicsUtilities`Private`s]]]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`numberForm,Function[{CalculateUtilities`GraphicsUtilities`Private`a,CalculateUtilities`GraphicsUtilities`Private`acc},
Quiet[RawBoxes[ToBoxes[NumberForm[CalculateUtilities`GraphicsUtilities`Private`a,
Max[1,Ceiling[Plus[RealExponent[CalculateUtilities`GraphicsUtilities`Private`a],CalculateUtilities`GraphicsUtilities`Private`acc]]],
ExponentFunction->Function[Null],NumberFormat->Function[StringReplace[Slot[1],StringExpression[
Pattern[CalculateUtilities`GraphicsUtilities`Private`s,BlankSequence[]],".",EndOfString]->CalculateUtilities`GraphicsUtilities`Private`s]]]]]]]]]]],ReleaseHold[
Uncompress["1:eJztVm1v0zAQbikw3hn8AyQ+o5UXCT4gDToYkwaUpHyvl1wSC9cOtrMN/jz47CZp1q5STAdoSj+c6kvz+O6556736EgESb/X66mrxnwQLE628PTQmJGY5aLg8bvTXIJSVPDkCj67ZUwIeg8Y+QGx81035r2QM6Ld+TW+T1hUMKLhq6aMagpqui9JntFI1Z6xpMfmJ1MmIsLoT3g8fLGz8/LV0MFgLGOiNUiunrWFzDNJFCQ9BLpmzFtG+Dd3fFAePxWMhfC9AB6Bum+8E0liAyM4YZiP962Xm6k7mJgmPCYyvnCarDxHbS9QWlKeTmCW4xvnkzVsC0xkqhw3d0tu1inIhX8DH4jQxuQ8Nml7tgT6hXHJ6Dsrq3/O3QDPu23hpThZTRzm94Yhb0TTY1DLdD5pXSfHSNW1Nvo5Vxc1XzYa5PlTpv5fOqRKL4fxtG0YMDsyNV6tvWX4523hRY5dPxf3PWM+O0cJuGo4VIL7KOKCzaNopjxwEm2frsqNw2HcrvgO0elTwQonMHGW/WL7Y7sCrzeFEGs33YB0eD0DAsjBuGLL7R5NqR5lRJLIAM+v65dNNhF1KB53tq895TE1A8wRsm55QnOQLNSd6Cj78kfFreRypsmQ9wOuIQW5VvQ3sT7SkMvjifCMJMQLmnr15rBKakykt+wHJUiYE04Rkv4yH/vNPVysBFK1L1Fd0rE4sKU59U+iXxb4EHiqs+aO7Tm6vNsWswnESa26gCbJ4rTZHNP9JtONG5oD3ZcE35L4D/RuU+g2hb+6KSztwd2a0K0J3ZrQrQndmvD/rgk2YvxX+g12prhe"]]},
Set[Typeset`initDone$$,True]]],RuleDelayed[DynamicModuleValues,{}],RuleDelayed[Deinitialization,
None],RuleDelayed[UntrackedVariables,{Typeset`size$$}],SynchronousInitialization->True,
RuleDelayed[UnsavedVariables,{Typeset`initDone$$}]],"Manipulate",Deployed->True,StripOnInput->False],
TraditionalForm],Manipulate`InterpretManipulate[1]],TraditionalForm]],"Output",{Background->None,GraphicsBoxOptions->{DefaultBaseStyle->{FontFamily->"Times","Graphics",GraphicsBoxOptionsDefaultAxesStyle->Directive[
GrayLevel[0,0.35],FontColor->GrayLevel[0.25],FontOpacity->1,"GraphicsAxes"],GraphicsBoxOptionsDefaultTicksStyle->Directive[
FontFamily->"Times",FontSize->10,"GraphicsTicks"],GraphicsBoxOptionsDefaultFrameStyle->Directive[
GrayLevel[0,0.35],FontColor->GrayLevel[0.25],FontOpacity->1,"GraphicsFrame"],GraphicsBoxOptionsDefaultFrameTicksStyle->Directive[
FontFamily->"Times",FontSize->10,"GraphicsFrameTicks"]}},Graphics3DBoxOptions->{DefaultBaseStyle->{FontFamily->"Times","Graphics3D"}}},
CellSize->{550,Automatic}]}],XMLElement["dataformats",{},{"minput"}]}]}]],Set[Typeset`aux1$$,
{True,False,{False},True}],Set[Typeset`aux2$$,{True,False,{False,False},True}],Set[
Typeset`asyncpods$$,{}],Set[Typeset`nonpods$$,{XMLElement["warnings",{"count"->"1"},
{XMLElement["reinterpret",{"text"->"Using closest Wolfram|Alpha interpretation:","new"->"graph of sin","score"->"0.4964857142857143","level"->"medium"},
{}]}]}],Set[Typeset`initdone$$,True],Set[Typeset`queryinfo$$,{"success"->"true","error"->"false","numpods"->"2","datatypes"->"Plot","timedout"->"","timedoutpods"->"","timing"->"2.305","parsetiming"->"0.193","parsetimedout"->"false","recalculate"->"","id"->"MSPa26521dh8ff4ch03dhbd000001f25207429d31fhh","host"->"http://www5b.wolframalpha.com","server"->"56","related"->"","version"->"2.6"}],Set[
Typeset`sessioninfo$$,{"TimeZone"->-8.0,"Date"->{2017,1,10,10,57,5.58788},"Line"->5,"SessionID"->19510097501986883941}],Set[
Typeset`showpods$$,{1,2}],Set[Typeset`failedpods$$,{}],Set[Typeset`chosen$$,{}],Set[
Typeset`open$$,False],Set[Typeset`newq$$,"\"graph*of*sin*xy\""]},DynamicBox[ToBoxes[
AlphaIntegration`FormatAlphaResults[Dynamic[{1,{Typeset`pod1$$,Typeset`pod2$$},{Typeset`aux1$$,Typeset`aux2$$},Typeset`chosen$$,Typeset`open$$,Typeset`elements$$,Typeset`q$$,Typeset`opts$$,Typeset`nonpods$$,Typeset`queryinfo$$,Typeset`sessioninfo$$,Typeset`showpods$$,Typeset`failedpods$$,Typeset`newq$$}]],
StandardForm],RuleDelayed[TrackedSymbols,{Typeset`showpods$$,Typeset`failedpods$$}]],
RuleDelayed[Initialization,If[Not[Typeset`initdone$$],CompoundExpression[Null,WolframAlphaClient`Private`doAsyncUpdates[
Hold[{Typeset`pod1$$,Typeset`pod2$$}],Typeset`asyncpods$$,Dynamic[Typeset`failedpods$$]],
Set[Typeset`asyncpods$$,{}],Set[Typeset`initdone$$,True]]]],RuleDelayed[DynamicModuleValues,
{}],SynchronousInitialization->False],BaseStyle->{Deployed->True},Editable->False,
DeleteWithContents->True,SelectWithContents->True],StandardForm],"Output",CellID->26,
CellLabel->"Out[5]= "]},Open]],Cell[
CellGroupData[{Cell[
BoxData[RowBox[{"graph"," ","of"," ","sin",RowBox[
{"(","xy",")"}]}]],"Input",CellID->42,CellLabel->"In[6]:= "],Cell[
BoxData[RowBox[
{"graph"," ","of"," ","sin"," ","xy"}],StandardForm],"Output",CellID->43,CellLabel->"Out[6]= "]},
Open]],Cell[
CellGroupData[{Cell[
TextData[{"graph"," ","of"," ","sin","(","xy",")"}],
"WolframAlphaShort",CellID->49,CellLabel->"In[7]:= "],Cell[
BoxData[Graphics3DBox[
GraphicsComplex3DBox[CompressedData["1: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"],
{{{EdgeForm[],Directive[Specularity[GrayLevel[1],3],RGBColor[0.880722,0.611041,0.142051],
Lighting->CompressedData["1:eJxTTMoPSmNhYGAoBhE+mcUlaUzIvGB2IMMxNykzNa8kjRkkwwEkgtydnPNz8ouKjq5q3rLW+bJ90f2KU2uubThjX9SVPm/aP83t9hDFcGO4gQyXzKLU5JLM/LzEHCxG6d1h3vfmxQX7ohS9XWzHy47bF9kFz9Nfc3GpfRojSDHIBM/cxPTU4OTEnNQUVPMzgTRDJhOMoLPlTANuOdz7ADMrgDw="]],GraphicsGroup3DBox[
TagBox[{Polygon3DBox[CompressedData["1:"]],Polygon3DBox[
CompressedData["1:"]],Polygon3DBox[
CompressedData["1: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"]],Polygon3DBox[
CompressedData["1:eJxtkDsOAjEMRFMg7sEN/EmwfQSkrTgCBRIVxXJ/wRIP0iI30Us8nrFzuj2v92NrbT18juWxvva3ywZK5l/gMJlgzgBBSSGO0kMshTRbhXt2oFWiG8ALj+15L9QYiI8OGChpNUco5uCZyi4BSHvi8xQzlx6kSKVfaiAVK4wOGPUc6eEWf1+JzxWm3IVD352FOxw="]]},
Function[Annotation[Slot[1],"Charting`Private`Tag$16512#1"]]]]},{},{},{},{}},{{GrayLevel[
0],Line3DBox[CompressedData["1:eJw9VrmRHDEQWz2JKAOyP7JD2CpZCkGGqmTJOOUuV5wBMGfc7rFB9A/et59/fvz693q9Pr6eX99/f/x9X1+md70/XV/wp8V8fzlfPBoHY8Fiu/f783VSN6AzANy8OdoE7BvoYIoxcN5j3udBggWCMNg9EwTz/NzAInNuB8IO1X3F8wYsMjUZjLFFJpmsbmCDyffxDcpOIBc+5yhSuMGwN5ARzvAD8U6b9Lrvz5wCFKKbjijSA5yr6DXKgUjVbOIgUzVYLPtMQnnXfcB9VsOgunsinty6WsypeTWD5RiBkGsouY1sbYqsJhGLZAvZzc1+2zSRNaEtsgeahCKH0pWdRUOQg7EXDyxNnVuC8qAcEZlZ8o68lBAtRBHxJLEJJcd2RlShAITY4mB2NpVdK4lFqDaErSpj/nM/+ZLVBhFIxpb8RzsRmgiWqIyhaooOK/M17pm5/DYN9D/URJ+6ypCNZY6lBnAiy10Bsc1qhHNNSyFPboZ1qxBDE6HhUchrchKTI1q8qrXbuioR8GEcc/WOBbmmGgGZVpUFyVjcKi2RQh1Dm0g3M+jXk6tpLRlki4pD1Mk9Y+9iazJZ1SMIRu1ICoI0RYJgUExSB/XtCJ1yO/24dYwErIZfmwudexRxQRFVJU14QAhD6UgUohG995I6U5RVo9GUcSThi8CgSmvvjCt6VIxMWoRVBmSQaRAYYhqwO89d9+gBnjs4T6M2gdqFDfV+xGlJApw65igLB9CW1DMpdK4pGkebrleOza1U2ykz5cxuJZ5D3deeaFDX0bbLvhg7H0E+VRbPa3gk58KB3unv2DXwJ5fLzs4HMxicOk9Ve8FfyL5oRz6ctGBB2pPmx43dOBOOL6YxP72H57+A/yCi9hw="]]},{GrayLevel[
0.2],Line3DBox[CompressedData["1:eJw9k0FORjEIhN/Ci3iDQqGFI5i48giamLhy8Xv/+LR8bF4mlOkMQ9/z+/fb58d1XY+n+/P69fh5+QMaGf9gmqwDfCwq+wAxP2BuqR47LAlPWA6rL0zo5x4bMY9oIipWWms6YHF0elRDYbVWGTMdVBBVgX6aTUwwf+6ZYxQrNmAFoFgD83tOWNzsA6s1l3j1ZDo9Ldp0RVRKoip38DXyRnR6DehcOMakYszV0QWg6VSsrKYGVo0jITEFTMxjVZzFGTaMI6N5EpQRnTBXwnJYeDYFTDyzr7J6R9ei5MO6l/UUOOwjbdamwji5SoJUI6tnbx4Ab36MrhTIYN08iWBfpp2GYd75UzqEfr35Cycockk="]],Line3DBox[
CompressedData["1:eJxFUjtOBUEM24KLcIP8JpMcAYnqlZQUSFQUj/uLB2OHZmVl7bHzeX7/un28Xdd1f3p8Xj/v3y+/wKr7D3jYIsgDdAG0HU5IOn+BLMtYqQN8H5VWBn9tvgywVFgpcmChYXwH5O2oCFVlABlJALKb4x0tqhQqRfgORTuGX5pK01EZoyqjnoTmS6iaqE0VLGoHYvRUjMDZF2eoh2wtgmC1aDHkZO/I0w6yFi0MFuEcr0+D2IWXcDvcBWe4/lvmlnMxTzIqgiXm/DiAcefkK1gJ3o9QPl3MOwOSS2GMBnnXyHkSmwcpRRVjyFwLVrmbpzVrWkGLzfsBuXW8mu76A/3tZ/4="]],Line3DBox[
CompressedData["1:eJw9k0FuQzEIRP+iF+kNDNgYjlCpqx6hlSpllUV6fzWteWyi0TczDAN5/bx/fH9d1/V4ef683x4/b39Ac8g/MF/jgLHWAeL7AAtqZh6WplDjB0zTA5ZMdJwvjk7XnBZzeBVntGDgp40pgvjRw5LYzUpATSFbq0WU4NB+amWr7rOKJWr20PZsgAndGNmKZT1y9dpqAAEo5pm9gpqS1SvHpgWxoJPoJDopG3rwtACOjjNOACqoCJ5sMHuzNvks5iqWEa9Fb5CmLFd2kA+xwAoSG8J2vG0ooCaNAWuQc3Ci2jXEMlGu27DN4iJRzvqySMyVDPv4vW+jjDk2nF4rK42sxT3p/GU2d4jVtRoIB+C/BURySg=="]],Line3DBox[
CompressedData["1:eJw9kj1uBDEIhbfIRXIDjDGGI0RKtTdIikipUmzur0zWfDQjZN4PPOb18+f+9XG73R4v1+f9+/H79l9oajyLuW2fImydQrJaEZuXxhjFfBY2IhAsjFmeYmEh6afQ0RYLTLNax3mplu8By9Cxcp8FTmsdRweLBcY3M/c6imBZpBR4q6Fj0M9eJrP2cliqE3DF0ompChYJRmuMKq69JhjhpTCyW7lDwFT6OgJYAaMTx3RkSLVqjItem85JmLDSyXCwqXcIixA2dIaXyb2E4zL86OssBJPDOYL8JEIs0e4BnaMMWNl/y8TUoXMCIbpwMAaLxAZ7ZU/oFOQc1RqZvBiCC0GuM/wP16RwQQ=="]],Line3DBox[
CompressedData["1:eJw9kjtORTEMRG/BRthB/ImdLAGJigVQUCBRUTz2Ly7Ex000cmbGE8fPH99vn+/XdT2e7uP16/Hz8gd0u/4Dm1EgfVGxAwxOal2t5Uce4fgIqoFPUBF8BLkCDCD4tNwAE+D4HI7LTuSlWrnLxw6wnUUe+BhXqhNyvWtPgexwCshQyAm5nQ2yQuY5FhV1VEKfExCohIoDrFTV6/ZpVZOrl8qiclqoZas6fEct1fYeVIUfe8MROAsOqlhwBsNcxOimwn/1V/ZqMV6+wBjmygbsWAaGhB+zxpK0wCeJYTXwe1fbkP1RDLVeKnDmXPh0pROWPNLx6Qrb6/EL4JptBQ=="]],Line3DBox[
CompressedData["1:eJxFkjtORDEMRV/BRtiB49hOvAQkKjaARIE01RTD/sVjno9poqPk+sa/16/7x/fncRyPl/N4vz1+3v5A0+wJ0yMuiBXcrAt0Dm5a7E+wQbhowQzFZwEJbAxLvFyAUYZLMfR6sgrftoC+acMrZxMpGDJwnhgGN0pUhU+bFaUtXvSnNFk+1onN/9o7jUTsiAOxIy6NWtWeO+t38jF6qFYwk7ZM4YmOiRLlQKBhKHklP1LauSodYqS6+GKgcTS0l0plavWnKj3Fi0oZASshs/7ajHvXuE8onz26rmRMLIAHPr02Rng7O1BP6r20G0h8mGBUeCYjiEojtgNtWGJfAgwMWS3NX1EJbcc="]],Line3DBox[
CompressedData["1:eJw9kjtuw0AMRFXkIr7B8rMf3iAGXPkILgy4SuHcH1G8fGyEweoNVzPU5fFzf34fx/H+Oh+31/v3+i80enyEadctxkQs+wiXvvZJxMK1cLXNtG7JzGJmMo5dfcPaBHgCD04GAxX7gPFkcvLJ5BxpHYbP6DWn5RzNpD4Wom5XAmYcsYIde7n2FWoh2IVXDSG4sgTPnr1FTo5VReHqBVOvkiLoMEvQ8CB7rqlxQpyTmbRaDJON7F7NKwyLM1r1DiMwA8ZgaD4mv03wR6V9CDs1lmL6B35ZVK8="]],Line3DBox[
CompressedData["1:eJw9kjFuRDEIRH+Ri+QG2GAMR4iUak8QpVhpqxSb+ys/+3k01sgeZgbw+/fP7f51HMfz7Tw+H8/fj38w0+UFdK8AJGBfIJZfIFVfwEYUZy67gHndRKy62aV8ogJZ5LUnglaCswW7fBSZJ6NqVjAbikUulK+EKoqpl6mHAwKwEYwSNJ5GVW3mI9pPZZG7wgsJXQfkZLwD8ioymcUE9yx3KdMhBKNcbHAjkBfk4KmnilclPGNMyJfXSOmESnkDliKO+2RiAhgAeg+24852BttxtmMItlevu24W87Eer3bvgeBGcCFocDblfAnKbVeM2T8z+fPMR2yh00spQU96T/qyzpOU06nOP+mTbyw="]],Line3DBox[
CompressedData["1:eJw9kkFOBTEMQ2fBRbhBkqZNcwQkVhwBJCRWLD73FwPNy+bL8sT5tpvn9++3z4/ruh5P98/r1+Pn5Q9YxvwHY245QL3AkFHMyANCzyeXrYfJHOzxw/guMN2Q72IAOoIZRTWwsQBlLCRRLYwdGybD+feSZ2Q5nCUfgHuIYWPzWei62moN7+Uwncsw5mS3ktOYjsHmCdMqPsWJbKHVxs4uvJjUhKmi0gClcs0kjjJc/cTaMLOGtYCwMFZirLOzZwVMP7dQgqLqhyO7JdUpDjmSJZhfzAjmhRJw2Dc2q+dILqGPrcy7BlaNMulQaWwLRVFLppd8kt2oTjoOl5ClWl149XOXKdxPJbVN81NgKHz0K/sviohyjw=="]],Line3DBox[
CompressedData["1:eJw9TrkNgEAMOwmmoGODy3NHMgISFSNQIFFRwP7iIAlNZNmO7XE7131IKV19O8tx3fMLACaYuwY060cQARoA5g9wFmNQhUKiMMe3hAWdqJafCUzhSq4Ub64aQLyo/BtyFP3VFkNaMczi5rbcgjnyJnsqCA/2mh+m"]],Line3DBox[
CompressedData["1:eJw9kjtOhDEMhLfgItwgcfzKEZCo9gSIAomKYrm/+Nn4cxONbM+MH3n9/Ll/fdxut8fL9bx/P37f/oHsHU+wbKwCmUT0gCWDiBTQkxJdgo5T08Wz6HM/gc5ZXtsVlp1ITAEsWFmsXSndG5DQlQjuGUQO0OGCYKcM0G2UacSpkViTSCnvsQHtLmVRk+qsua4penbHawF6Y7C0+jEmNYpXDAQTEHgZOl3TyyzT5RvB4yUmXqzsZQ5A92w1V93iOlwJpgf05G9wuKA4WELQT7BnrmPZjQ3OhLuXsnaHycLTGRALfoJrpVzQKXCxjF+38KqRczYQQLP44dL9BPvhlPRj2hFOqfYHUR1vpA=="]],Line3DBox[
CompressedData["1:eJw9kz1ORVEIhF/hRtzBAc4PLMHEyt7GwsTK4rn/+PTOR3Mz4QwDDNznj++3z/fb7XZ/enxev+4/L38grPYFouwCywcRQOhp7PoH0/a5wBghzhbnZAIuTuxRpOupzAHKypjieBBpHVfRs4g0uJr3Mxe1DrW6+oQ81TNTDBrbY5ElN4q5iqdCx4qIXcDzNFlz7dXKTtbEzKHqKU5Fc0JPct5bcHhzcMOUHo7O0L6yOiJ7sW7a0oDp+LMOyiIHjQWrXNYbRCdkwgwJGuTQ3t0xyrLT8VAbfJhwMIFWE8EziLA4SzbYh4Tzxv3svp8D6A5VohKfOZJlh+b5HbwPyeEkI2uutfwXH+tr3w=="]],Line3DBox[
CompressedData["1:eJw9kj1ORDEMhLfgItzAv0l8BCSq7WgpkKgolvuLx8ZfmqeR39gznvj18+f+9XG73R4v1+f9+/H79g/cRDYYo4Eu28BtUfEnCJ2bEyLxBFayf7n0L1+eVLTJZZB3l4dPOIbEqaCVE2MGUOYkc9phmtLeElpY9a5UBGSjvbqSDIyTxrahNVpi5EIi6XL8DDZ1Ug26gkpCnk0mMZkDMOEsOGevo16dj500CgmsyrEBuaIHKhLKe2FVFrsLfla/oMbpaj+D2xCuZRzPHEBFEibAijndtQh8hXbgHcJ1SIUEOauTM6kyZ7CO6SGflZMu5TZa4jpxKhwS75U5/wA++Wbd"]],Line3DBox[
CompressedData["1:eJxFkjtOhDEMhLfgItwgfsR2joBEtQ09BRIVxXJ/8UP8hSYa2WOP7cnz+9f94+12uz2eruf18/H98gtMa24wswBJKhqk/AEtaXLGjtjwtUFFp0R2lYsM+tgGPhzQEevyK9CRNbthrAQwRgnl2qPaaSgtagpZmYcFkfD/BQflA63NUaMq1tnLiThn6eFl9MzL+obJgtpX1dX38ZETctLZSAVk57wFR9EqOiecRFRIYQHuhMBZChBShQWKBUUKu1ffJ4uVW+LiBBPSEIkwPgArF+ZWS7jQuea5xqlyVuZvGKLH5Rl8SGMwI3L+6vHrmML/yVMeP8eCZRc="]],Line3DBox[
CompressedData["1:eJw9kjtORTEMRG/BRthB/IkdLwGJipqKAomK4rF/cSE+aSLLHo894zx/fL99vl/X9Xi6n9evx8/LX2A2dAcucwfTiox3xscORMlY/gc3xHamSiAU2ru0Isj0rBwLQmueMEqb2bQaM6aQ6cV0eXexodYeIaW96r00IxTMZI1N6CObsFagK+hCBRgtBzyZfgQeDwcZo+vochZDcq9hhb2Zgy4Fs4NbX+AG4DhGtRzRyQj2GZwSww0erYHzXUrjghju3MJHoELxh3bAYa00pIeudkzXbJ7EQzmYZnZZuGGnlASta63Vh5PggovS+RvFiC5FHe2TCzrtRyCf35P25EvwbZg1s34BguFqiQ=="]],Line3DBox[
CompressedData["1:eJw9jjEOAjEMBCPBL67iB7GdOOsnnETFEyhOoqI4/i+O84YmGmXHa9+e78e2lFL26/HcX/tn/YFYlwS1OMHcWoK0jJoMnKAxPKMRfxg57gBl6JQZdQObtaZTu3Npq1MGezhlCJkyf8Jlyjw1wEJR3mOzuWpPEPf1cgACX/yRIew="]],Line3DBox[
CompressedData["1:eJxTTMoPShNiYGAoZgESPpnFJZ4ghpGJmSGYYWhgZObJDGRYWFpCBEzMLSBKzI2MYSLmYIaxubkRhGFsaAJRY2lhAGaYGBlAGIbmxsYwhglUO1QN0EBzmIgh2E5LA7gjLKACRgCLSBct"]]},{GrayLevel[
0.2],Line3DBox[CompressedData["1:eJxFkztOBEEMRCfgItzAdtv9OQIS0R6AgGCljQiW+4uBqdcko1KVy+3fvH5+3e4fx3E8X87P++P5/fYLfFT9gcgZF+jDYNoFog1JNS8wW8JcUnrvCgbkchI2GD0RaeTpAPKsBlPYN+iACRgkDOwk/H9iAeRy22WkXL6QmsYyL7svTSNtbEZ9uacYje6MCRh14aFBNUptFO/MsOmtU6IMpmFrEYN9Yk+BtrDPpXZ2p6VOzai507IlUiBpdOYwg6XYRNJ8Zqgen+x9X0IUkmIGCYfsJyjAXkFxPywuWVxtRmWMMIADyBwst3N+naOtzXA27KJCXYxmMMT0fer8IH3BOKcVP3iKbIo="]],Line3DBox[
CompressedData["1:eJw9kjFuQ0EIRH+Ri+QGwC4LHCFSCitHSGHJVQrn/srGO0NjPc0fYAf8/v3zdb9d1/V82z+fj+fvxz9o+HqByZoHfEDxyBdMna3EAVsAoUfSqdSBRUh4NrSC8izDiKKn9EDUOKAyMaKEiuPxecxagT4SrSCOKsyV7BPsbIARDcZPiDwwYuoIKvSM9jQ4PyHpYJxRrPJWFjqLUWG54/FTlMDy5aziwoVJ+yjaSXlcPaBp2LMmj6vszPUGzJadvXg4Zs8U3msSsMMwKlz4fiIVJwxWcRazW/9/fGA6Im9lEtBwuwn1B+TuXSo="]],Line3DBox[
CompressedData["1:eJxFUztuQzEMe0Mv0hvoL/sIBTr1AgU6FMiUIb0/6sakuwQERepJtPL6df/4/ryu6/Gyft5vj5+3P6Bd+gQWY2wgNTcwB5CWJwixDSwHXFlG4LvhjElNgMljP+IA8N6gKykeZI590g5Xc7A+9til0E6W0GeIECgadpMxMhB7AaiSaXb2gngU8kEsi0HDQghmiXxGFOyTH8WmpoYtxsSE6hz1iAc1eJ0wbGGaZ8FJhmJlwwIoRfIiGL74lCKNeJ2XIE77JMPb0Ek7+vAklslZSobATXkt6ziQhgZLxhJWFkfJ5DDoU//gaDBY8DaCTyDhZJLM0TRdHFXJIIT1Xhhs8Jkkjf8LJcOVkyfh/gtgGW19"]],Line3DBox[
CompressedData["1:eJw9UTtuQzEMe0B7kdxAH0uWTlAE6NQjZCjQqUN6fzSJyLfYBCmbonS5/X59fxzHcX9/HJ8/97/rE+gSGWCrB2SDyRpmaccL2PYTOEESrCkWo5QjaVgNE84Pg6Y2r0x6oXjvAVsHeKuRgVesYUxRs/jcnineHqArcdfrLvTpYXuEdgiFtDk9eZWDiWnXkvnV0UqpwDiQVlMRW/hcFB9GkLHxTISVk2B3rlRiFIzDtOCosDYxOBaAbk5TO1GcaMYZ030GVO2wXLR0gYK0pkO0FAksQNZZwo1iEybBTfhka2PY1H/pzFBV"]],Line3DBox[
CompressedData["1:eJw9kjFuBDEMA7fIR/IDWZZl+QkBUt0PkuKAq1Jc/o84t5xtFoQkiqRX798/t/vXcRzPt/35fDx/P/5Bm+kv4D0EohaVfgKbjco4waxOJV4gWu+0QiANIPocS8PzBG0NtUYvaS1JjDANDyqL4WUAzGcANOxZouc8K0nSxE/J/AYOOFOEoZUlY83Ys1LDRnZmyqTeOi82EzCQuPwEAM8TG2iViZ5GnCGtbB0Q0FnYYLXBIxgVbQ6Z3wDPkxl3sa7Irjj7rzDMP8VhNQLip7CxFwHEaos43FgQJ3Qku8JB5kUvgA7JCmMmVnY8d6k7ohYJy2mx0HkWx3PS6s6JDiqyuq+fCq1Jiqs14w/02m+x"]],Line3DBox[
CompressedData["1:eJw9UjlOBEEQ24CP8IO6jycgEe0LEAESEcHyfzHs2JOMrO5x+6h6/fy5f33cbrfHy/F5/378vv0DnYwTrNsTWNSewA3ATHDFk7ABPQDW+rzqvEA9QWif/5h4kSVk6XmVbfi5cFKQOECDBYe6mnCop5+Qhqh14UFtAooak6rSmMOqDAFYCj86yoDCOIMSBu+YFqrzHQJ6vrQC6rNLY0bPsFGKnkuQS3PBEiUdoh2cTrPDi8VZJHJpL+MMq5OAeXR4iCKgbPIkQR92OJzOODukZ75cg6TdLIFDsQ1IFBzK4srrSqE8wZJ0sQRuprEEGXSYw7kPPZeT5RRFz9KcVzQBAnay5+SqO1drkFSSHWKfLbh+7klW/QFia28H"]],Line3DBox[
CompressedData["1:eJw9kj1OREEMg7fgItwgyfwkOQIS1dZUFEhUFMv9xWPf59eMrJk4tjN5/fy5f33cbrfHy3G8fz9+3/6B11on6DGeINY2wOoT2MwnmMaT12xYUWdNboprx1nsFbpxsVys6+nSmrAWTyunwICOQ2/f0NfAWJZuoBsShwsFdBkzkjqdY6J+AGm5AhrZPQg4HM++RTduRrfo0spQH2p2l0DSh7FMmxu6yXwTZ1eL5QImCaaaLfPFfIYtJEIOE5a1avg4z0rREY3LoZVYirOZajJ5r6S4iHxsC0lNfSbzOUCJro0CRJLrUL/68DtWDHxc/6XOQx+XFHuJFeQK0yK19jCXJEqj00La0nxGCSjFqD8AE2qZ"]],Line3DBox[
CompressedData["1:eJxFkj1OBTEMhLfgItzATpzEPgISFQegoECionjcXwQy33tbrEbOeDz+ef74fvt8v67r9rR/r1+3n5c/4DnmP2gzErAO2B/AeRJ5Dci9APd0O8D60QmjxFhDRaOhMwAB6CfLl2xYS2X1w/FyKXvK2JoJUFYuCWYScZTLiMiGQzaTThieXU9d5PBuRFS9qa+dbmR1+TGyDKsPIPIszdA1ljCtwNO6QHXIeNZSwu4reHACGw6glkm5VpGuTvuCTO8NY600llFMfqAzGVQdsPdW8rxSJViBoWM5IDtk54ktD3U6UiBY3ITcUl0wuhac6F48EdWqO4eJdd28c3U7i8tcRgRjunkvJhaLdsb6BVUObLU="]],Line3DBox[
CompressedData["1:eJw9k0FuxDAMA3PoR/oDSZZs6gkFetoXFD0ssKcetv9H0w3pSzBwRJq0k/fvn9v96ziO59v5+Hw8fz/+wVHrgh75gphVF9TwCyLAlWi9shekp4Y5cxo6DTU8MwQydO61YgqWoOiTKR8OI4aAhmFcWQ5BC9gLY9KHM+muGEWVoznMzOfw5Zy2WNBcwUIFDZphQmMehyu8MeowBvNi5tEp4F4+FMOYGV2SK+ogDCRVZlrh7qvVHVBT3RePzhuss3Z3yiNSB7WbLjmDcqxmd8pPFaNiucCokhxL98Ve6dAHoNOw1tcCF+wVGU6dD+H0kfM2hC6OqkhtkTrVbPXSX4DpNCwOl+TFymFTcmyYgv0T9R80fm8w"]],Line3DBox[
CompressedData["1:eJw9UrltBEEM28CNuANJo7cEA46uAsPBARc5OPcPj2/JTQaEhqTe9++f2/3rOI7n234+H8/fj3+gHX2CWfECtpadwBKRdCdYL+CaTrlRLienLeFDYAoft1NuYcoI5O0BHyM5jT5QmTiyO3K5Fg2vSMJwFQx18BVFQ4GPwnmTTlAqBIzI0FBoyDLwZVoXwDCbfQ05ImiwMQ0XY4XCMoJDmAYnkLQF5B5MlUPYZAMZ29nlsIwefA16V4x3c+jcWG5koq9BpCMJqOpFFQfFXcRgcV1sRyAPYQoMYQOWWjwkgL0mGNrg2IR3KIjYiqGPMIKWKzkoAPPiHQ6dXanCjSWzr1D4BFfQrJAHWVfvdC7sfYMimD+MOW7U"]],Line3DBox[
CompressedData["1:eJxFUjtOBTEQewUX4QbzyfyOgERFQ0+BREXxuL9YXuzQrCzHzno8ef74fvt8v91u96fr8/p1/3n5AyYxG7gDrCUPoOO1GfMAaKdGH2ApwHW0tqtiA6tyAhzNOsx2aWfgHm3YwZjAZdIJcdkWS1MMRicF4sEUNsw8224hhkkzcY8zWGLSFdSIEGDARAxLYQz2ozI8QnXdhYSzIEarpobMjSNtOZqGBkXpCHs2MK1ODfqJf5BcSpNBwpIgYKvMHBRXCOyVZLgmAyOIYcGiOooAS2m+lsbTWnKexHEp+pkzF0a+xLhQnFNEEBQB/4XMFsYOE/s6ZVpypw7xKi7Xlfb4BU8rZJ0="]],Line3DBox[
CompressedData["1:eJw9kztOxkAMhFNwEW7g1+56j4BERU9DgURF8XN/Ech8aaKRMx6Px8nzx/fb5/txHI+n8/H69fh5+QNhsy+Q5Reoqn/gu0yVNS4QfYHyaCrzIq8JeU/axVm9AUvtXVTEaemcepBnAPIS7MX0Ng1dzJoIVgIGAIcyH2PKhuVQu3RimtrTAqDKlPkYJtB6dfpRxV06wRZpE7C0hZmm4/AOs1Xx3g15izzkxwdBmTjb7qPocO3yM73puisYc8ynU1GGw2Ws2NTQKaanc8okKMczghbEsnXBHQbn3osQNt+YcdMQ6CL5CLq0hZWmT8JMhjapJmCETlnJCfjGamovG/wFi1iSrsWmSVBZvwk5a3M="]],Line3DBox[
CompressedData["1:eJw9kjFuBTEIRLfIRXIDsLENR4iU6tepUkRKleLn/oojz9vGQsMMA5jXz5/H18d1Xc+X/bx/P3/f/oPW2jjBjAIJBbODnCB8KbVaEaQ45icYY4KYVA1kSJVLptYNRBxT5fBSwXRULi9PyccSZ3ZHPiQfdz+dVKAyUocT1ps4joptmEOeRZBSsQSPhWqA3CM3yCflVXcQSsnL00hlEeAVpzFfhYVrrsnm3RsLV8/tbqxSBe8pCguNsxHtp0+pnMqdSwhtbKvw6vSj794pqSISOetN3FMWS78c/KnXCMgLRO59cDa6lr1V+mHzazUQ1UnGyalPmeK07Dps48aM5nfTIFpmLHEi7Q9FBmpA"]],Line3DBox[
CompressedData["1:eJxFkjlOBUEMRCfgItygvfVyBCQiToAIkIgIPvcXjaZek4ws1+Kye54/vt8+36/rejztz+vX4+flr3D3fhczGoXdRSs6PdXJpY4XxQ2lmXzc4i7S5ZP/8gbH1YkFB7LDaeKkaVaPQCXI1i3PNhsQPqahPobkXQltkrlPcepAwSwZdldCG10qjlDcx8ad0KbCZ0Nuh4PKK8TR5fcSA07R0ay2lNDiQEYn6DA077PYWDhPo2iCJoYmn316ZgWQMhfkApqdJ1CM/Tg63Vi86eK3Sd7i7J6SR51HUbBVnDf4WzR9Q0WeI9fQxuMGd84cUqnYHE6nTTcHH4I17bXXEVSDvY48DtnpTAwdQ2JM+wUL5m6E"]],Line3DBox[
CompressedData["1:eJw9UjlOBEEQm4CP8IO6jycgEZGREiARESz/F7BtbzKyqn3UuPv54/vt8/26rtvT3+f16/bz8g/MfA6I6QOkigCTHiWwOwitvQPtXJDJyTpAp45zyBTImOgmnbfAYWjv42gJoOpORhAM1thyTEJpSHlw+TD4TEAFw9Boyp1krhFMXzqzMTVwSmA4KyQvyMGsdXIaQNhPKjn8HRiGGNJH0Y+iQyulSgV/Ieh5jG0oyKJclUeuyUlwUlShuhCCBFmMayxegjQ4bkrycILCh42Vn4mNCQzd+aJwZJKUczFL+ARfCyOElzu4C13n80tepZPD6syRPomI5GLpD5X9Aqx6Z0E="]]},{},{}}},
VertexNormals->CompressedData["1:"]],
DisplayFunction->Identity,Axes->True,AxesLabel->{None,None,None},BoxRatios->{1,1,0.4},
RuleDelayed[DisplayFunction,Identity],FaceGridsStyle->Automatic,Method->{"DefaultBoundaryStyle"->Directive[
GrayLevel[0.3]],"RotationControl"->"Globe"},PlotRange->{{-3.14579,3.14579},{-3.14579,3.14579},{-0.9999754405386854,0.9999754405386854}},
PlotRangePadding->{Scaled[0.02],Scaled[0.02],Scaled[0.02]},Ticks->{Automatic,Automatic,Automatic}],
StandardForm],"Output",CellID->50,CellLabel->"Out[7]= "]},Open]],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Solve","[",RowBox[{RowBox[{RowBox[{RowBox[{"2",RowBox[{"y","^","2"}]}],"-",RowBox[
{"2","x","*","y"}],"+",RowBox[{"4","y"}]}],"=",RowBox[{RowBox[{"0"," ","&&"," ",RowBox[
{RowBox[{"4","y","*","x"}],"-",RowBox[{"x","^","2"}],"+",RowBox[{"4","x"}]}]}],"=","0"}]}],","," ",RowBox[
{"{",RowBox[{"x",",","y"}],"}"}]}],"]"}]],"Input",CellID->65,CellLabel->"In[8]:= "],Cell[
BoxData[
TemplateBox[{"Set","write","\"Tag \\!\\(\\*TagBox[\\\"And\\\", Short[#1, 5] & ]\\) in \\!\\(\\*TagBox[RowBox[{\\\"0\\\", \\\"&&\\\", RowBox[{RowBox[{\\\"4\\\", \\\" \\\", \\\"y\\\", \\\" \\\", \\\"x\\\"}], \\\"-\\\", SuperscriptBox[\\\"x\\\", \\\"2\\\"], \\\"+\\\", RowBox[{\\\"4\\\", \\\" \\\", \\\"x\\\"}]}]}], Short[#1, 5] & ]\\) is Protected.\"",2,8,1,19510097501986883941,$Failed},
"MessageTemplate"],StandardForm],"Message","MSG",CellID->66],Cell[
BoxData[TemplateBox[
{"Set","write","\"Tag \\!\\(\\*TagBox[\\\"Plus\\\", Short[#1, 5] & ]\\) in \\!\\(\\*TagBox[RowBox[{RowBox[{\\\"4\\\", \\\" \\\", \\\"y\\\"}], \\\"-\\\", RowBox[{\\\"2\\\", \\\" \\\", \\\"x\\\", \\\" \\\", \\\"y\\\"}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", SuperscriptBox[\\\"y\\\", \\\"2\\\"]}]}], Short[#1, 5] & ]\\) is Protected.\"",2,8,2,19510097501986883941,$Failed},
"MessageTemplate"],StandardForm],"Message","MSG",CellID->68],Cell[
BoxData[TemplateBox[
{"Solve","naqs","\"\\!\\(\\*TagBox[\\\"0\\\", Short[#1, 5] & ]\\) is not a quantified system of equations and inequalities.\"",2,8,3,19510097501986883941,$Failed},
"MessageTemplate"],StandardForm],"Message","MSG",CellID->69],Cell[
BoxData[RowBox[
{"Solve","[",RowBox[{"0",",",RowBox[{"{",RowBox[{"x",",","y"}],"}"}]}],"]"}],StandardForm],
"Output",CellID->70,CellLabel->"Out[8]= "]},Open]],Cell[
CellGroupData[{Cell[
BoxData[
RowBox[{"Solve","[",RowBox[{RowBox[{RowBox[{RowBox[{RowBox[{"2",RowBox[{"y","^","2"}]}],"-",RowBox[
{"2","x","*","y"}],"+",RowBox[{"4","y"}]}],"==","0"}]," ","&&"," ",RowBox[{RowBox[
{RowBox[{"4","y","*","x"}],"-",RowBox[{"x","^","2"}],"+",RowBox[{"4","x"}]}],"==","0"}]}],","," ",RowBox[
{"{",RowBox[{"x",",","y"}],"}"}]}],"]"}]],"Input",CellID->74,CellLabel->"In[9]:= "],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"{",RowBox[{RowBox[{"x","\[Rule]","0"}],",",RowBox[{"y","\[Rule]",RowBox[
{"-","2"}]}]}],"}"}],",",RowBox[{"{",RowBox[{RowBox[{"x","\[Rule]",FractionBox["4",
"3"]}],",",RowBox[{"y","\[Rule]",RowBox[{"-",FractionBox["2","3"]}]}]}],"}"}],",",RowBox[
{"{",RowBox[{RowBox[{"x","\[Rule]","4"}],",",RowBox[{"y","\[Rule]","0"}]}],"}"}],",",RowBox[
{"{",RowBox[{RowBox[{"x","\[Rule]","0"}],",",RowBox[{"y","\[Rule]","0"}]}],"}"}]}],"}"}],
StandardForm],"Output",CellID->75,CellLabel->"Out[9]= "]},Open]]},StyleDefinitions->"Default.nb",
FrontEndVersion->"10.0 for Wolfram Cloud Platform (June 2 2014)"]